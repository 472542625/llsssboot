<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lc.web.resource.dao.TreeMapper">
	<resultMap id="BaseResultMap" type="com.lc.web.resource.entity.Tree">
		<id column="gid" jdbcType="INTEGER" property="gid" />
		<result column="oid_" jdbcType="DOUBLE" property="oid" />
		<result column="contractorid" jdbcType="VARCHAR" property="contractorid" />
		<result column="id" jdbcType="VARCHAR" property="id" />
		<result column="area" jdbcType="VARCHAR" property="area" />
		<result column="date" jdbcType="DATE" property="date" />
		<result column="contractor" jdbcType="VARCHAR" property="contractor" />
		<result column="recorder" jdbcType="VARCHAR" property="recorder" />
		<result column="visitage" jdbcType="VARCHAR" property="visitage" />
		<result column="treeage" jdbcType="DOUBLE" property="treeage" />
		<result column="treeheight" jdbcType="DOUBLE" property="treeheight" />
		<result column="grounddiameter" jdbcType="DOUBLE" property="grounddiameter" />
		<result column="treearea" jdbcType="DOUBLE" property="treearea" />
		<result column="x" jdbcType="DOUBLE" property="x" />
		<result column="y" jdbcType="DOUBLE" property="y" />

		<result column="village" jdbcType="VARCHAR" property="village" />
		<result column="town" jdbcType="VARCHAR" property="town" />
		<result column="urban" jdbcType="VARCHAR" property="urban" />
		<result column="maintenance" jdbcType="VARCHAR" property="maintenance" />
		<result column="geom" jdbcType="OTHER" property="geom" />
		<result column="gp_id" jdbcType="INTEGER" property="gpId" />

		<result column="treespecies_id" jdbcType="INTEGER" property="treespeciesId" />
		<result column="treeage_id" jdbcType="INTEGER" property="treeageId" />
		<result column="treeage_var" jdbcType="VARCHAR" property="treeageVar" />

	</resultMap>
	<resultMap type="com.lc.web.resource.entity.Growingpotential" id="growPotential">
	 <id column="gpid" jdbcType="INTEGER" property="gpid" />
    <result column="growingpotential" jdbcType="VARCHAR" property="growingpotential" />
	</resultMap>
	<resultMap type="com.lc.web.resource.entity.Treespecies" id="treeSpecies">
		<id column="treespeciesid" jdbcType="INTEGER" property="treespeciesid" />
		<result column="treespeciesname" jdbcType="VARCHAR" property="treespeciesname" />
		<result column="section" jdbcType="VARCHAR" property="section" />
		<result column="genus" jdbcType="VARCHAR" property="genus" />
		<result column="imgpath" jdbcType="VARCHAR" property="imgpath" />
	</resultMap>
	<resultMap id="WithTreeInfo" type="com.lc.web.resource.entity.Tree">
		<id column="gid" jdbcType="INTEGER" property="gid" />
		<result column="oid_" jdbcType="DOUBLE" property="oid" />
		<result column="contractorid" jdbcType="VARCHAR" property="contractorid" />
		<result column="id" jdbcType="VARCHAR" property="id" />
		<result column="area" jdbcType="VARCHAR" property="area" />
		<result column="date" jdbcType="DATE" property="date" />
		<result column="contractor" jdbcType="VARCHAR" property="contractor" />
		<result column="recorder" jdbcType="VARCHAR" property="recorder" />
		<result column="treespecies" jdbcType="VARCHAR" property="treespecies" />
		<result column="visitage" jdbcType="VARCHAR" property="visitage" />
		<result column="treeage" jdbcType="DOUBLE" property="treeage" />
		<result column="treeheight" jdbcType="DOUBLE" property="treeheight" />
		<result column="grounddiameter" jdbcType="DOUBLE" property="grounddiameter" />
		<result column="treearea" jdbcType="DOUBLE" property="treearea" />
		<result column="x" jdbcType="DOUBLE" property="x" />
		<result column="y" jdbcType="DOUBLE" property="y" />

		<result column="village" jdbcType="VARCHAR" property="village" />
		<result column="town" jdbcType="VARCHAR" property="town" />
		<result column="urban" jdbcType="VARCHAR" property="urban" />
		<result column="maintenance" jdbcType="VARCHAR" property="maintenance" />
		<result column="geom" jdbcType="OTHER" property="geom" />
		<result column="gp_id" jdbcType="INTEGER" property="gpId" />

		<result column="treespecies_id" jdbcType="INTEGER" property="treespeciesId" />
		<result column="treeage_id" jdbcType="INTEGER" property="treeageId" />
		<result column="treeage_var" jdbcType="VARCHAR" property="treeageVar" />
		<association property="growingpotential"
			javaType="com.lc.web.resource.entity.Growingpotential">
			<id column="gpid" property="gpid" />
			<result column="growingpotential" property="growingpotential" />
		</association>
		<association property="treespeciesvar"
			javaType="com.lc.web.resource.entity.Treespecies">
			<id column="treespeciesid" property="treespeciesid" />
			<result column="treespeciesname" property="treespeciesname" />
			<result column="section" property="section" />
			<result column="genus" property="genus" />
			<result column="imgpath" property="imgpath" />
		</association>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		gid, oid_, area, date, contractor, contractorid, recorder,
		treespecies,
		visitage,
		treeage, treeheight, grounddiameter, treearea,
		gp_id, x, y, geom,
		treespecies_id,
		treeage_id, treeage_var, area_name
	</sql>
	<sql id="Base_Column_List_WithTreeInfo">
		d.gid,d.contractorid,d.id,d.area,d.date,d.contractor,d.recorder,d.visitage,d.treeage,d.treeheight,d.grounddiameter,d.treearea,d.x,d.y,d.village,d.town,d.urban,d.maintenance,st_astext(d.geom)
		as
		geom,d.gp_id,g.gpid,g.growingpotential,d.treespecies_id,t.treespeciesid,t.treespeciesname,t.section,t.genus,t.imgpath
	</sql>
	<select id="selectByExampleWithTreeInfo" parameterType="com.lc.web.resource.entity.TreeExample"
		resultMap="WithTreeInfo">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List_WithTreeInfo" />
		from daxing_tree
		d left join daxing_growingpotential g on d.gp_id =
		g.gpid left join
		daxing_treespecies t on
		d.treespecies_id=t.treespeciesid

		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>

		order by d.gid

	</select>
	<select id="selectByPrimaryKeyWithTreeInfo" parameterType="java.lang.Integer"
		resultMap="WithTreeInfo">
		select

		<include refid="Base_Column_List_WithTreeInfo" />
		from daxing_tree
		d left join daxing_growingpotential g on d.gp_id =
		g.gpid left join
		daxing_treespecies t on
		d.treespecies_id=t.treespeciesid

		where gid =#{gid};
	</select>
	<select id="selectByExample" parameterType="com.lc.web.resource.entity.TreeExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from daxing_tree
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from daxing_tree
		where gid = #{gid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		daxing_tree
		where gid = #{gid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.lc.web.resource.entity.TreeExample">
		delete from daxing_tree
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.lc.web.resource.entity.Tree">
		insert into daxing_tree (gid,
		oid_, area,
		date, contractor, contractorid,
		recorder,
		visitage,
		treeage, treeheight, grounddiameter,
		treearea, gp_id, x, y,
		geom, treespecies_id, treeage_id,
		treeage_var, town)
		values
		(#{gid,jdbcType=INTEGER}, #{oid,jdbcType=DOUBLE},
		#{area,jdbcType=VARCHAR},
		#{date,jdbcType=DATE},
		#{contractor,jdbcType=VARCHAR}, #{contractorid,jdbcType=VARCHAR},
		#{recorder,jdbcType=VARCHAR},
		#{visitage,jdbcType=VARCHAR},
		#{treeage,jdbcType=DOUBLE},
		#{treeheight,jdbcType=DOUBLE}, #{grounddiameter,jdbcType=DOUBLE},
		#{treearea,jdbcType=DOUBLE}, #{gpId,jdbcType=INTEGER},
		#{x,jdbcType=DOUBLE}, #{y,jdbcType=DOUBLE},
		#{geom,jdbcType=OTHER},
		#{treespeciesId,jdbcType=INTEGER}, #{treeageId,jdbcType=INTEGER},
		#{treeageVar,jdbcType=VARCHAR}, #{town,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.lc.web.resource.entity.Tree">
		insert into daxing_tree
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="gid != null">
				gid,
			</if>
			<if test="oid != null">
				oid_,
			</if>
			<if test="area != null">
				area,
			</if>
			<if test="date != null">
				date,
			</if>
			<if test="contractor != null">
				contractor,
			</if>
			<if test="contractorid != null">
				contractorid,
			</if>
			<if test="recorder != null">
				recorder,
			</if>
			<if test="treespecies != null">
				treespecies,
			</if>
			<if test="visitage != null">
				visitage,
			</if>
			<if test="treeage != null">
				treeage,
			</if>
			<if test="treeheight != null">
				treeheight,
			</if>
			<if test="grounddiameter != null">
				grounddiameter,
			</if>
			<if test="treearea != null">
				treearea,
			</if>
			<if test="gpId != null">
				gp_id,
			</if>
			<if test="x != null">
				x,
			</if>
			<if test="y != null">
				y,
			</if>
			<if test="geom != null">
				geom,
			</if>
			<if test="treespeciesId != null">
				treespecies_id,
			</if>

			<if test="treeageId != null">
				treeage_id,
			</if>
			<if test="treeageVar != null">
				treeage_var,
			</if>
			<if test="town != null">
				town,
			</if>
			<if test="village != null">
				village,
			</if>
			<if test="urban != null">
				urban,
			</if>
			<if test="maintenance != null">
				maintenance,
			</if>
			<if test="id != null">
				id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="gid != null">
				#{gid,jdbcType=INTEGER},
			</if>
			<if test="oid != null">
				#{oid,jdbcType=DOUBLE},
			</if>
			<if test="area != null">
				#{area,jdbcType=VARCHAR},
			</if>
			<if test="date != null">
				#{date,jdbcType=DATE},
			</if>
			<if test="contractor != null">
				#{contractor,jdbcType=VARCHAR},
			</if>
			<if test="contractorid != null">
				#{contractorid,jdbcType=VARCHAR},
			</if>
			<if test="recorder != null">
				#{recorder,jdbcType=VARCHAR},
			</if>
			<if test="treespecies != null">
				#{treespecies,jdbcType=VARCHAR},
			</if>
			<if test="visitage != null">
				#{visitage,jdbcType=VARCHAR},
			</if>
			<if test="treeage != null">
				#{treeage,jdbcType=DOUBLE},
			</if>
			<if test="treeheight != null">
				#{treeheight,jdbcType=DOUBLE},
			</if>
			<if test="grounddiameter != null">
				#{grounddiameter,jdbcType=DOUBLE},
			</if>
			<if test="treearea != null">
				#{treearea,jdbcType=DOUBLE},
			</if>
			<if test="gpId != null">
				#{gpId,jdbcType=INTEGER},
			</if>
			<if test="x != null">
				#{x,jdbcType=DOUBLE},
			</if>
			<if test="y != null">
				#{y,jdbcType=DOUBLE},
			</if>
			<if test="geom != null">
				#{geom,jdbcType=OTHER},
			</if>
			<if test="treespeciesId != null">
				#{treespeciesId,jdbcType=INTEGER},
			</if>
			<if test="treeageId != null">
				#{treeageId,jdbcType=INTEGER},
			</if>
			<if test="treeageVar != null">
				#{treeageVar,jdbcType=VARCHAR},
			</if>
			<if test="town != null">
				#{town,jdbcType=VARCHAR},
			</if>
			<if test="village != null">
				#{village,jdbcType=VARCHAR},
			</if>
			<if test="urban != null">
				#{urban,jdbcType=VARCHAR},
			</if>
			<if test="maintenance != null">
				#{maintenance,jdbcType=VARCHAR},
			</if>
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>

		</trim>
	</insert>
	<select id="countByExample" parameterType="com.lc.web.resource.entity.TreeExample"
		resultType="java.lang.Long">
		select count(*) from daxing_tree
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update daxing_tree
		<set>
			<if test="record.gid != null">
				gid = #{record.gid,jdbcType=INTEGER},
			</if>
			<if test="record.oid != null">
				oid_ = #{record.oid,jdbcType=DOUBLE},
			</if>
			<if test="record.area != null">
				area = #{record.area,jdbcType=VARCHAR},
			</if>
			<if test="record.date != null">
				date = #{record.date,jdbcType=DATE},
			</if>
			<if test="record.contractor != null">
				contractor = #{record.contractor,jdbcType=VARCHAR},
			</if>
			<if test="record.contractorid != null">
				contractorid = #{record.contractorid,jdbcType=VARCHAR},
			</if>
			<if test="record.recorder != null">
				recorder = #{record.recorder,jdbcType=VARCHAR},
			</if>

			<if test="record.visitage != null">
				visitage = #{record.visitage,jdbcType=VARCHAR},
			</if>
			<if test="record.treeage != null">
				treeage = #{record.treeage,jdbcType=DOUBLE},
			</if>
			<if test="record.treeheight != null">
				treeheight = #{record.treeheight,jdbcType=DOUBLE},
			</if>
			<if test="record.grounddiameter != null">
				grounddiameter =
				#{record.grounddiameter,jdbcType=DOUBLE},
			</if>
			<if test="record.treearea != null">
				treearea = #{record.treearea,jdbcType=DOUBLE},
			</if>
			<if test="record.gpId != null">
				gp_id = #{record.gpId,jdbcType=INTEGER},
			</if>
			<if test="record.x != null">
				x = #{record.x,jdbcType=DOUBLE},
			</if>
			<if test="record.y != null">
				y = #{record.y,jdbcType=DOUBLE},
			</if>
			<if test="record.geom != null">
				geom = #{record.geom,jdbcType=OTHER},
			</if>
			<if test="record.treespeciesId != null">
				treespecies_id =
				#{record.treespeciesId,jdbcType=INTEGER},
			</if>
			<if test="record.treespecies != null">
				treespecies =
				#{record.treespecies,jdbcType=VARCHAR},
			</if>
			<if test="record.treeageId != null">
				treeage_id = #{record.treeageId,jdbcType=INTEGER},
			</if>
			<if test="record.treeageVar != null">
				treeage_var = #{record.treeageVar,jdbcType=VARCHAR},
			</if>
			<if test="record.town != null">
				town = #{town.areaName,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update daxing_tree
		set gid = #{record.gid,jdbcType=INTEGER},
		oid_ =
		#{record.oid,jdbcType=DOUBLE},
		area = #{record.area,jdbcType=VARCHAR},
		date = #{record.date,jdbcType=DATE},
		contractor =
		#{record.contractor,jdbcType=VARCHAR},
		contractorid =
		#{record.contractorid,jdbcType=VARCHAR},
		recorder =
		#{record.recorder,jdbcType=VARCHAR},
		treespecies =
		#{record.treespecies,jdbcType=VARCHAR},
		visitage =
		#{record.visitage,jdbcType=VARCHAR},
		treeage =
		#{record.treeage,jdbcType=DOUBLE},
		treeheight =
		#{record.treeheight,jdbcType=DOUBLE},
		grounddiameter =
		#{record.grounddiameter,jdbcType=DOUBLE},
		treearea =
		#{record.treearea,jdbcType=DOUBLE},
		gp_id =
		#{record.gpId,jdbcType=INTEGER},
		x = #{record.x,jdbcType=DOUBLE},
		y =
		#{record.y,jdbcType=DOUBLE},
		geom = #{record.geom,jdbcType=OTHER},
		treespecies_id = #{record.treespeciesId,jdbcType=INTEGER},
		treeage_id =
		#{record.treeageId,jdbcType=INTEGER},
		treeage_var =
		#{record.treeageVar,jdbcType=VARCHAR},
		area_name =
		#{record.town,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.lc.web.resource.entity.Tree">
		update daxing_tree
		<set>
			<if test="oid != null">
				oid_ = #{oid,jdbcType=DOUBLE},
			</if>
			<if test="area != null">
				area = #{area,jdbcType=VARCHAR},
			</if>
			<if test="date != null">
				date = #{date,jdbcType=DATE},
			</if>
			<if test="contractor != null">
				contractor = #{contractor,jdbcType=VARCHAR},
			</if>
			<if test="contractorid != null">
				contractorid = #{contractorid,jdbcType=VARCHAR},
			</if>
			<if test="recorder != null">
				recorder = #{recorder,jdbcType=VARCHAR},
			</if>
			<if test="treespecies != null">
				treespecies = #{treespecies,jdbcType=VARCHAR},
			</if>
			<if test="visitage != null">
				visitage = #{visitage,jdbcType=VARCHAR},
			</if>

			<if test="treeage != null">
				treeage = #{treeage,jdbcType=DOUBLE},
			</if>
			<if test="treeheight != null">
				treeheight = #{treeheight,jdbcType=DOUBLE},
			</if>
			<if test="grounddiameter != null">
				grounddiameter = #{grounddiameter,jdbcType=DOUBLE},
			</if>
			<if test="treearea != null">
				treearea = #{treearea,jdbcType=DOUBLE},
			</if>
			<if test="gpId != null">
				gp_id = #{gpId,jdbcType=INTEGER},
			</if>
			<if test="x != null">
				x = #{x,jdbcType=DOUBLE},
			</if>
			<if test="y != null">
				y = #{y,jdbcType=DOUBLE},
			</if>
			<if test="geom != null">
				geom = #{geom,jdbcType=OTHER},
			</if>
			<if test="treespeciesId != null">
				treespecies_id = #{treespeciesId,jdbcType=INTEGER},
			</if>
			<if test="treeageId != null">
				treeage_id = #{treeageId,jdbcType=INTEGER},
			</if>
			<if test="treeageVar != null">
				treeage_var = #{treeageVar,jdbcType=VARCHAR},
			</if>
			<if test="town != null">
				town = #{town,jdbcType=VARCHAR},
			</if>
			<if test="village != null">
				village = #{village,jdbcType=VARCHAR},
			</if>
			<if test="urban != null">
				urban = #{urban,jdbcType=VARCHAR},
			</if>
			<if test="maintenance != null">
				maintenance = #{maintenance,jdbcType=VARCHAR},
			</if>
			<if test="id != null">
				id = #{id,jdbcType=VARCHAR},
			</if>
		</set>
		where gid = #{gid,jdbcType=INTEGER}
	</update>




	<update id="updateByPrimaryKey" parameterType="com.lc.web.resource.entity.Tree">
		update daxing_tree
		set oid_ = #{oid},
		area = #{area},
		date = #{date},contractor = #{contractor},contractorid =#{contractorid},recorder =#{recorder},visitage =#{visitage},
		treeage = #{treeage},treeheight = #{treeheight},grounddiameter =#{grounddiameter},treearea =#{treearea},
		gp_id = #{gpId},x =#{x},y = #{y},geom =st_geomfromtext('point(#{x} #{y})',4326),
		treespecies_id =#{treespeciesId},treeage_id =#{treeageId},treeage_var =#{treeageVar},town =#{town}
		where gid = #{gid}
	</update>












	<!-- 根据承包人contractor like '%'||#{_parameter}||'%' -->
	<select id="listPointByContractor" parameterType="java.lang.String"
		resultMap="WithTreeInfo">
		SELECT
		<include refid="Base_Column_List_WithTreeInfo" />
		FROM daxing_tree d left join daxing_growingpotential g on d.gp_id =
		g.gpid left join daxing_treespecies t on
		d.treespecies_id=t.treespeciesid
		<!-- <where> <if test="contractor != null"></if></where> -->
		where contractor =#{contractor}



	</select>
	<!-- 根据树名 -->
	<select id="listPointBytreespecies" parameterType="java.lang.String"
		resultMap="WithTreeInfo">
		SELECT
		<include refid="Base_Column_List_WithTreeInfo" />
		FROM daxing_tree d left join daxing_growingpotential g on d.gp_id =
		g.gpid left join daxing_treespecies t on
		d.treespecies_id=t.treespeciesid
		<!-- <where> <if test="contractor != null"></if></where> -->
		where treespecies =#{treespecies}



	</select>
	<!-- 列出所有树种 -->
	<select id="listtreespecies" resultType="string">
		SELECT
		treespeciesname FROM daxing_treespecies



	</select>

	<select id="listVillage" resultType="string">
		select distinct village from daxing_tree;



	</select>


	<select id="listFyPoint" resultMap="WithTreeInfo">
		SELECT
		<include refid="Base_Column_List_WithTreeInfo" />
		FROM daxing_tree d left join daxing_growingpotential g on d.gp_id =
		g.gpid left join daxing_treespecies t on
		d.treespecies_id=t.treespeciesid
		order by d.gid
	</select>

	<!-- 根据树龄 -->
	<select id="listPointBytreeage" parameterType="map" resultMap="WithTreeInfo">
		SELECT
		<include refid="Base_Column_List_WithTreeInfo" />
		FROM daxing_tree d left join daxing_growingpotential g on d.gp_id =
		g.gpid left join daxing_treespecies t on
		d.treespecies_id=t.treespeciesid
		where d.treeage between
		#{orgintreeage} and #{destreeage}
		<!-- 根据树高 -->
	</select>
	<select id="listPointBytreeheight" parameterType="map"
		resultMap="WithTreeInfo">
		SELECT
		<include refid="Base_Column_List_WithTreeInfo" />
		FROM daxing_tree d left join daxing_growingpotential g on d.gp_id =
		g.gpid left join daxing_treespecies t on
		d.treespecies_id=t.treespeciesid
		where d.treeheight between
		#{orgintreeheight} and #{destreeheight}

	</select>
	<!-- order by d.gid -->


	<select id="listPointTreespecies" resultType="treeSpecies">
		SELECT 
		treespeciesid,treespeciesname FROM daxing_treespecies

	</select>
	<select id="listPointgrowingPotential" resultMap="growPotential">
		SELECT
		gpid,growingpotential
		FROM daxing_growingpotential order by gpid

	</select>




 

	<update id="updatepoint" parameterType="com.lc.web.resource.entity.Tree">
		update daxing_tree
		<set>
			<if test="oid != null">
				oid_ = #{oid,jdbcType=DOUBLE},
			</if>
			<if test="area != null">
				area = #{area,jdbcType=VARCHAR},
			</if>
			<if test="date != null">
				date = #{date,jdbcType=DATE},
			</if>
			<if test="contractor != null">
				contractor = #{contractor,jdbcType=VARCHAR},
			</if>
			<if test="contractorid != null">
				contractorid = #{contractorid,jdbcType=VARCHAR},
			</if>
			<if test="recorder != null">
				recorder = #{recorder,jdbcType=VARCHAR},
			</if>
			<if test="treespecies != null">
				treespecies = #{treespecies,jdbcType=VARCHAR},
			</if>
			<if test="visitage != null">
				visitage = #{visitage,jdbcType=VARCHAR},
			</if>

			<if test="treeage != null">
				treeage = #{treeage,jdbcType=DOUBLE},
			</if>
			<if test="treeheight != null">
				treeheight = #{treeheight,jdbcType=DOUBLE},
			</if>
			<if test="grounddiameter != null">
				grounddiameter = #{grounddiameter,jdbcType=DOUBLE},
			</if>
			<if test="treearea != null">
				treearea = #{treearea,jdbcType=DOUBLE},
			</if>
			<if test="gpId != null">
				gp_id = #{gpId,jdbcType=INTEGER},
			</if>
			<if test="x != null">
				x = #{x,jdbcType=DOUBLE},
			</if>
			<if test="y != null">
				y = #{y,jdbcType=DOUBLE},
			</if>
			<if test="geom != null">
				geom = #{geom,jdbcType=OTHER},
			</if>
			<if test="treespeciesId != null">
				treespecies_id = #{treespeciesId,jdbcType=INTEGER},
			</if>
			<if test="treeageId != null">
				treeage_id = #{treeageId,jdbcType=INTEGER},
			</if>
			<if test="treeageVar != null">
				treeage_var = #{treeageVar,jdbcType=VARCHAR},
			</if>
			<if test="town != null">
				town = #{town,jdbcType=VARCHAR},
			</if>
			<if test="village != null">
				village = #{village,jdbcType=VARCHAR},
			</if>
			<if test="urban != null">
				urban = #{urban,jdbcType=VARCHAR},
			</if>
			<if test="maintenance != null">
				maintenance = #{maintenance,jdbcType=VARCHAR},
			</if>
			<if test="id != null">
				id = #{id,jdbcType=VARCHAR},
			</if>
		</set>

	</update>
	<delete id="deletePointBygid" parameterType="int">
		delete from
		daxing_tree
		where gid = #{gid,jdbcType=INTEGER}
	</delete>











</mapper>