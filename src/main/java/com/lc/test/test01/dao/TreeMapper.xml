<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lc.test.test01.dao.TreeMapper">
  <resultMap id="BaseResultMap" type="com.lc.test.test01.entity.Tree">
    <id column="gid" jdbcType="INTEGER" property="gid" />
    <result column="oid_" jdbcType="NUMERIC" property="oid" />
    <result column="contractorid" jdbcType="VARCHAR" property="contractorid" />
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="contractor" jdbcType="VARCHAR" property="contractor" />
    <result column="recorder" jdbcType="VARCHAR" property="recorder" />
    <result column="treespecies" jdbcType="VARCHAR" property="treespecies" />
    <result column="visitage" jdbcType="VARCHAR" property="visitage" />
    <result column="treeage" jdbcType="NUMERIC" property="treeage" />
    <result column="treeheight" jdbcType="NUMERIC" property="treeheight" />
    <result column="grounddiameter" jdbcType="NUMERIC" property="grounddiameter" />
    <result column="treearea" jdbcType="NUMERIC" property="treearea" />
    <result column="x" jdbcType="NUMERIC" property="x" />
    <result column="y" jdbcType="NUMERIC" property="y" />
    <result column="village" jdbcType="VARCHAR" property="village" />
    <result column="town" jdbcType="VARCHAR" property="town" />
    <result column="urban" jdbcType="VARCHAR" property="urban" />
    <result column="maintenance" jdbcType="VARCHAR" property="maintenance" />
    <result column="geom" jdbcType="OTHER" property="geom" />
    <result column="gp_id" jdbcType="INTEGER" property="gpId" />
    <result column="treespecies_id" jdbcType="INTEGER" property="treespeciesId" />
    <result column="treeage_var" jdbcType="VARCHAR" property="treeageVar" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    gid, oid_, contractorid, id, area, date, contractor, recorder, treespecies, visitage, 
    treeage, treeheight, grounddiameter, treearea, x, y, village, town, urban, maintenance, 
    geom, gp_id, treespecies_id, treeage_var
  </sql>
  <select id="selectByExample" parameterType="com.lc.test.test01.entity.TreeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from daxing_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from daxing_tree
    where gid = #{gid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from daxing_tree
    where gid = #{gid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lc.test.test01.entity.TreeExample">
    delete from daxing_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lc.test.test01.entity.Tree">
    insert into daxing_tree (gid, oid_, contractorid, 
      id, area, date, contractor, 
      recorder, treespecies, visitage, 
      treeage, treeheight, grounddiameter, 
      treearea, x, y, village, 
      town, urban, maintenance, 
      geom, gp_id, treespecies_id, 
      treeage_var)
    values (#{gid,jdbcType=INTEGER}, #{oid,jdbcType=NUMERIC}, #{contractorid,jdbcType=VARCHAR}, 
      #{id,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, #{contractor,jdbcType=VARCHAR}, 
      #{recorder,jdbcType=VARCHAR}, #{treespecies,jdbcType=VARCHAR}, #{visitage,jdbcType=VARCHAR}, 
      #{treeage,jdbcType=NUMERIC}, #{treeheight,jdbcType=NUMERIC}, #{grounddiameter,jdbcType=NUMERIC}, 
      #{treearea,jdbcType=NUMERIC}, #{x,jdbcType=NUMERIC}, #{y,jdbcType=NUMERIC}, #{village,jdbcType=VARCHAR}, 
      #{town,jdbcType=VARCHAR}, #{urban,jdbcType=VARCHAR}, #{maintenance,jdbcType=VARCHAR}, 
      #{geom,jdbcType=OTHER}, #{gpId,jdbcType=INTEGER}, #{treespeciesId,jdbcType=INTEGER}, 
      #{treeageVar,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lc.test.test01.entity.Tree">
    insert into daxing_tree
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        gid,
      </if>
      <if test="oid != null">
        oid_,
      </if>
      <if test="contractorid != null">
        contractorid,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="contractor != null">
        contractor,
      </if>
      <if test="recorder != null">
        recorder,
      </if>
      <if test="treespecies != null">
        treespecies,
      </if>
      <if test="visitage != null">
        visitage,
      </if>
      <if test="treeage != null">
        treeage,
      </if>
      <if test="treeheight != null">
        treeheight,
      </if>
      <if test="grounddiameter != null">
        grounddiameter,
      </if>
      <if test="treearea != null">
        treearea,
      </if>
      <if test="x != null">
        x,
      </if>
      <if test="y != null">
        y,
      </if>
      <if test="village != null">
        village,
      </if>
      <if test="town != null">
        town,
      </if>
      <if test="urban != null">
        urban,
      </if>
      <if test="maintenance != null">
        maintenance,
      </if>
      <if test="geom != null">
        geom,
      </if>
      <if test="gpId != null">
        gp_id,
      </if>
      <if test="treespeciesId != null">
        treespecies_id,
      </if>
      <if test="treeageVar != null">
        treeage_var,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=NUMERIC},
      </if>
      <if test="contractorid != null">
        #{contractorid,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="contractor != null">
        #{contractor,jdbcType=VARCHAR},
      </if>
      <if test="recorder != null">
        #{recorder,jdbcType=VARCHAR},
      </if>
      <if test="treespecies != null">
        #{treespecies,jdbcType=VARCHAR},
      </if>
      <if test="visitage != null">
        #{visitage,jdbcType=VARCHAR},
      </if>
      <if test="treeage != null">
        #{treeage,jdbcType=NUMERIC},
      </if>
      <if test="treeheight != null">
        #{treeheight,jdbcType=NUMERIC},
      </if>
      <if test="grounddiameter != null">
        #{grounddiameter,jdbcType=NUMERIC},
      </if>
      <if test="treearea != null">
        #{treearea,jdbcType=NUMERIC},
      </if>
      <if test="x != null">
        #{x,jdbcType=NUMERIC},
      </if>
      <if test="y != null">
        #{y,jdbcType=NUMERIC},
      </if>
      <if test="village != null">
        #{village,jdbcType=VARCHAR},
      </if>
      <if test="town != null">
        #{town,jdbcType=VARCHAR},
      </if>
      <if test="urban != null">
        #{urban,jdbcType=VARCHAR},
      </if>
      <if test="maintenance != null">
        #{maintenance,jdbcType=VARCHAR},
      </if>
      <if test="geom != null">
        #{geom,jdbcType=OTHER},
      </if>
      <if test="gpId != null">
        #{gpId,jdbcType=INTEGER},
      </if>
      <if test="treespeciesId != null">
        #{treespeciesId,jdbcType=INTEGER},
      </if>
      <if test="treeageVar != null">
        #{treeageVar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lc.test.test01.entity.TreeExample" resultType="java.lang.Long">
    select count(*) from daxing_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update daxing_tree
    <set>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.oid != null">
        oid_ = #{record.oid,jdbcType=NUMERIC},
      </if>
      <if test="record.contractorid != null">
        contractorid = #{record.contractorid,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.contractor != null">
        contractor = #{record.contractor,jdbcType=VARCHAR},
      </if>
      <if test="record.recorder != null">
        recorder = #{record.recorder,jdbcType=VARCHAR},
      </if>
      <if test="record.treespecies != null">
        treespecies = #{record.treespecies,jdbcType=VARCHAR},
      </if>
      <if test="record.visitage != null">
        visitage = #{record.visitage,jdbcType=VARCHAR},
      </if>
      <if test="record.treeage != null">
        treeage = #{record.treeage,jdbcType=NUMERIC},
      </if>
      <if test="record.treeheight != null">
        treeheight = #{record.treeheight,jdbcType=NUMERIC},
      </if>
      <if test="record.grounddiameter != null">
        grounddiameter = #{record.grounddiameter,jdbcType=NUMERIC},
      </if>
      <if test="record.treearea != null">
        treearea = #{record.treearea,jdbcType=NUMERIC},
      </if>
      <if test="record.x != null">
        x = #{record.x,jdbcType=NUMERIC},
      </if>
      <if test="record.y != null">
        y = #{record.y,jdbcType=NUMERIC},
      </if>
      <if test="record.village != null">
        village = #{record.village,jdbcType=VARCHAR},
      </if>
      <if test="record.town != null">
        town = #{record.town,jdbcType=VARCHAR},
      </if>
      <if test="record.urban != null">
        urban = #{record.urban,jdbcType=VARCHAR},
      </if>
      <if test="record.maintenance != null">
        maintenance = #{record.maintenance,jdbcType=VARCHAR},
      </if>
      <if test="record.geom != null">
        geom = #{record.geom,jdbcType=OTHER},
      </if>
      <if test="record.gpId != null">
        gp_id = #{record.gpId,jdbcType=INTEGER},
      </if>
      <if test="record.treespeciesId != null">
        treespecies_id = #{record.treespeciesId,jdbcType=INTEGER},
      </if>
      <if test="record.treeageVar != null">
        treeage_var = #{record.treeageVar,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update daxing_tree
    set gid = #{record.gid,jdbcType=INTEGER},
      oid_ = #{record.oid,jdbcType=NUMERIC},
      contractorid = #{record.contractorid,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      contractor = #{record.contractor,jdbcType=VARCHAR},
      recorder = #{record.recorder,jdbcType=VARCHAR},
      treespecies = #{record.treespecies,jdbcType=VARCHAR},
      visitage = #{record.visitage,jdbcType=VARCHAR},
      treeage = #{record.treeage,jdbcType=NUMERIC},
      treeheight = #{record.treeheight,jdbcType=NUMERIC},
      grounddiameter = #{record.grounddiameter,jdbcType=NUMERIC},
      treearea = #{record.treearea,jdbcType=NUMERIC},
      x = #{record.x,jdbcType=NUMERIC},
      y = #{record.y,jdbcType=NUMERIC},
      village = #{record.village,jdbcType=VARCHAR},
      town = #{record.town,jdbcType=VARCHAR},
      urban = #{record.urban,jdbcType=VARCHAR},
      maintenance = #{record.maintenance,jdbcType=VARCHAR},
      geom = #{record.geom,jdbcType=OTHER},
      gp_id = #{record.gpId,jdbcType=INTEGER},
      treespecies_id = #{record.treespeciesId,jdbcType=INTEGER},
      treeage_var = #{record.treeageVar,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lc.test.test01.entity.Tree">
    update daxing_tree
    <set>
      <if test="oid != null">
        oid_ = #{oid,jdbcType=NUMERIC},
      </if>
      <if test="contractorid != null">
        contractorid = #{contractorid,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        id = #{id,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="contractor != null">
        contractor = #{contractor,jdbcType=VARCHAR},
      </if>
      <if test="recorder != null">
        recorder = #{recorder,jdbcType=VARCHAR},
      </if>
      <if test="treespecies != null">
        treespecies = #{treespecies,jdbcType=VARCHAR},
      </if>
      <if test="visitage != null">
        visitage = #{visitage,jdbcType=VARCHAR},
      </if>
      <if test="treeage != null">
        treeage = #{treeage,jdbcType=NUMERIC},
      </if>
      <if test="treeheight != null">
        treeheight = #{treeheight,jdbcType=NUMERIC},
      </if>
      <if test="grounddiameter != null">
        grounddiameter = #{grounddiameter,jdbcType=NUMERIC},
      </if>
      <if test="treearea != null">
        treearea = #{treearea,jdbcType=NUMERIC},
      </if>
      <if test="x != null">
        x = #{x,jdbcType=NUMERIC},
      </if>
      <if test="y != null">
        y = #{y,jdbcType=NUMERIC},
      </if>
      <if test="village != null">
        village = #{village,jdbcType=VARCHAR},
      </if>
      <if test="town != null">
        town = #{town,jdbcType=VARCHAR},
      </if>
      <if test="urban != null">
        urban = #{urban,jdbcType=VARCHAR},
      </if>
      <if test="maintenance != null">
        maintenance = #{maintenance,jdbcType=VARCHAR},
      </if>
      <if test="geom != null">
        geom = #{geom,jdbcType=OTHER},
      </if>
      <if test="gpId != null">
        gp_id = #{gpId,jdbcType=INTEGER},
      </if>
      <if test="treespeciesId != null">
        treespecies_id = #{treespeciesId,jdbcType=INTEGER},
      </if>
      <if test="treeageVar != null">
        treeage_var = #{treeageVar,jdbcType=VARCHAR},
      </if>
    </set>
    where gid = #{gid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lc.test.test01.entity.Tree">
    update daxing_tree
    set oid_ = #{oid,jdbcType=NUMERIC},
      contractorid = #{contractorid,jdbcType=VARCHAR},
      id = #{id,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      contractor = #{contractor,jdbcType=VARCHAR},
      recorder = #{recorder,jdbcType=VARCHAR},
      treespecies = #{treespecies,jdbcType=VARCHAR},
      visitage = #{visitage,jdbcType=VARCHAR},
      treeage = #{treeage,jdbcType=NUMERIC},
      treeheight = #{treeheight,jdbcType=NUMERIC},
      grounddiameter = #{grounddiameter,jdbcType=NUMERIC},
      treearea = #{treearea,jdbcType=NUMERIC},
      x = #{x,jdbcType=NUMERIC},
      y = #{y,jdbcType=NUMERIC},
      village = #{village,jdbcType=VARCHAR},
      town = #{town,jdbcType=VARCHAR},
      urban = #{urban,jdbcType=VARCHAR},
      maintenance = #{maintenance,jdbcType=VARCHAR},
      geom = #{geom,jdbcType=OTHER},
      gp_id = #{gpId,jdbcType=INTEGER},
      treespecies_id = #{treespeciesId,jdbcType=INTEGER},
      treeage_var = #{treeageVar,jdbcType=VARCHAR}
    where gid = #{gid,jdbcType=INTEGER}
  </update>
</mapper>